[
  {
    "path": "posts/2022-02-21-244lizards/",
    "title": "ESM 244: Lizards Model",
    "description": "Classwork for ESM 244 (UCSB) non least squares regression.",
    "author": [
      {
        "name": "Kristina Fauss",
        "url": {}
      }
    ],
    "date": "2022-02-21",
    "categories": [],
    "contents": "\n\n\nknitr::opts_chunk$set(echo = TRUE,message=FALSE,warning = FALSE)\nlibrary(tidyverse)\nlibrary(Metrics)\nlibrary(cowplot)\nlibrary(knitr)\nlibrary(sjPlot)\n\n\n\nOverview\nData:\nTitle: Lizard pitfall trap data from 11 NPP study locations at the Jornada Basin LTER site, 1989-2006.\nDescription: The time period captured is 1989 to 2006. The data includes the following contents as information about lizards captured at the Jornada Basin LTER across 11 study locations: [date, zone, site, plot, pit, spp, sex, rcap, toe_num, SV_length, weight, tail, pc].\nSite, plot, and pit refer to capture location, while zone refers to vegetation. Spp indicates a species code. Rcap indicates whether the lizard is a recapture. Sex, toe_num, SV_length, total_length, weight, and tail all reference characteristics of the lizard. Data is intended to track how desertification (change in vegetation) in the Chihuahuan desert affects consumer species.\nCitation: Lightfoot, D. and W.G. Whitford. 2020. Lizard pitfall trap data from 11 NPP study locations at the Jornada Basin LTER site, 1989-2006 ver 37. Environmental Data Initiative. https://doi.org/10.6073/pasta/4a6e258fb49c31e222ecbbcfd128967f (Accessed 2022-02-03).\n\n\n# Read in cleaned data:\nliz_data <- read.csv('lizard.csv')\n\n\n\nQuestions:\nApply non least squares regression to estimate model parameters for a lizard length to weight model.\nData Exploration\n\n\nggplot(data=liz_data, aes(x=SV_length, y=weight))+\n  labs(title='Length v. Weight Across Species',x='Length',y='Weight',color='Species')+\n  geom_point(aes(color=spp,shape=sex))\n\n\n\n\nFit a Snout Length to Weight Model\nOriginal Model: \\[\nW = a(SVL)^b\n\\]\nLog transform: \\[\nln(W) = b*ln(SVL) + ln(a)\n\\]\n\n\n# Calculate log of SVL and Weight\nliz_data$log_weight <- log(liz_data$weight)\nliz_data$log_SV_length <- log(liz_data$SV_length)\n\n\n\nOLS Model of Log-Transformed Data: Supply coeficients to NLS Model\n\n\nOLSmod_liz <- lm(log_weight ~ log_SV_length, data=liz_data)\n\n# Get coefficients\ncoefs_liz <- as.data.frame(coef(OLSmod_liz))\nb = coefs_liz$`coef(OLSmod_liz)`[2]\nlog_a = coefs_liz$`coef(OLSmod_liz)`[1]\na = exp(log_a)\n\n\n\nDefine original function:\n\n\nf_liz<-function(coef_a,coef_b,SV_length){\n  out=coef_a*(SV_length^coef_b)\n  return(out)\n}\n\n\n\nNLS model:\n\n\n# Guess carrying capacity as the largest val in our data\nguess_vec=c(a,b)\n\nNLSmod_liz=nls(weight~f_liz(coef_a,coef_b,SV_length),\n                  data=liz_data,\n                  start=list(coef_a=guess_vec[1],coef_b=guess_vec[2]),\n                  trace=TRUE) # reached a convergence quickly?\n\n\n17064.55    (3.24e-01): par = (0.0002085246 2.537119)\n16502.11    (2.59e-01): par = (0.0002772028 2.477012)\n15516.47    (5.68e-02): par = (0.0003473554 2.443989)\n15466.89    (2.62e-03): par = (0.000337407 2.45569)\n15466.81    (6.77e-04): par = (0.000342001 2.452585)\n15466.80    (1.56e-04): par = (0.0003409034 2.453348)\n15466.80    (3.81e-05): par = (0.0003411808 2.453161)\n15466.80    (9.33e-06): par = (0.0003411133 2.453207)\n\ntab_model(NLSmod_liz)\n\n\n\n \n\n\nweight\n\n\nPredictors\n\n\nEstimates\n\n\nCI\n\n\np\n\n\ncoef a\n\n\n0.00\n\n\n0.00 – 0.00\n\n\n<0.001\n\n\ncoef b\n\n\n2.45\n\n\n2.40 – 2.51\n\n\n<0.001\n\n\nObservations\n\n\n1986\n\n\nR2\n\n0.781\n\n\nPlot the NLS model and data:\n\n\n# Predict data from NLS model:\nliz_data$weight_pred<-predict(NLSmod_liz)\n\n# Plot\nggplot()+\n  geom_point(data=liz_data, aes(x=SV_length, y=weight_pred, color=sex))+\n  labs(title='Length v. Weight Across Species',x='Length',y='Weight',color='Sex')\n\n\n\n\nWestern Whiptail Lizard Model:\n\n\n# Filter out Western Whiptail Lizard Data: CNTI\ncnti_data <- filter(liz_data,spp=='CNTI',sex=='M')\n\n\n\nData Exploration, CNTI\n\n\nggplot(data=cnti_data, aes(x=SV_length, y=weight))+\n  labs(title='Length v. Weight Western Whiptail',x='Length',y='Weight',shape='Sex')+\n  geom_point(aes(shape=sex))\n\n\n\n\nFit the Snout Length to Weight Model on CNTI\n\n\n# Calculate log of SVL and Weight\ncnti_data$log_weight <- log(cnti_data$weight)\ncnti_data$log_SV_length <- log(cnti_data$SV_length)\n\n\n\nOLS Model of Log-Transformed Data: Supply coeficients to NLS Model\n\n\nOLSmod_cnti <- lm(log_weight ~ log_SV_length, data=cnti_data)\n\n# Get coefficients\ncoefs_cnti <- as.data.frame(coef(OLSmod_cnti))\nb_cnti = coefs_cnti$`coef(OLSmod_cnti)`[2]\nlog_a_cnti = coefs_cnti$`coef(OLSmod_cnti)`[1]\na_cnti = exp(log_a_cnti)\n\n\n\nDefine original function:\n\n\nf_cnti<-function(coef_a,coef_b,SV_length){\n  out=coef_a*(SV_length^coef_b)\n  return(out)\n}\n\n\n\nNLS model:\n\n\n# Guess carrying capacity as the largest val in our data\nguess_vec_cnti=c(a_cnti,b_cnti)\n\nNLSmod_cnti=nls(weight~f_cnti(coef_a,coef_b,SV_length),\n                  data=cnti_data,\n                  start=list(coef_a=guess_vec_cnti[1],coef_b=guess_vec_cnti[2]),\n                  trace=TRUE) # reached a convergence quickly?\n\n\n849.1572    (2.38e-01): par = (0.0001204877 2.698108)\n845.6613    (2.27e-01): par = (0.0001330208 2.674996)\n843.4176    (2.19e-01): par = (0.000145976 2.653427)\n841.8629    (2.14e-01): par = (0.0001592699 2.633319)\n840.6339    (2.09e-01): par = (0.0001728179 2.614592)\n839.5079    (2.05e-01): par = (0.0001865362 2.597165)\n838.3596    (2.00e-01): par = (0.0002003434 2.580958)\n837.1280    (1.96e-01): par = (0.0002141623 2.565892)\n835.7939    (1.91e-01): par = (0.0002279206 2.551894)\n834.3628    (1.85e-01): par = (0.0002415522 2.538892)\n832.8544    (1.80e-01): par = (0.0002549974 2.526816)\n831.2942    (1.74e-01): par = (0.0002682034 2.515604)\n830.9229    (1.72e-01): par = (0.0002940453 2.494784)\n829.4806    (1.66e-01): par = (0.0003185494 2.476905)\n827.3386    (1.57e-01): par = (0.0003414678 2.461569)\n826.9172    (1.55e-01): par = (0.0003838388 2.435273)\n822.7939    (1.37e-01): par = (0.0004187718 2.416406)\n818.0645    (1.14e-01): par = (0.0004743039 2.389404)\n809.0350    (4.10e-02): par = (0.0005336902 2.365838)\n807.6757    (1.94e-04): par = (0.0005309859 2.368548)\n807.6756    (1.74e-05): par = (0.0005316264 2.368276)\n807.6756    (1.56e-06): par = (0.0005315662 2.368301)\n\ntab_model(NLSmod_cnti)\n\n\n\n \n\n\nweight\n\n\nPredictors\n\n\nEstimates\n\n\nCI\n\n\np\n\n\ncoef a\n\n\n0.00\n\n\n-0.00 – 0.00\n\n\n0.219\n\n\ncoef b\n\n\n2.37\n\n\n2.01 – 2.73\n\n\n<0.001\n\n\nObservations\n\n\n72\n\n\nR2\n\n0.790\n\n\nPlot the NLS model and data:\n\n\n# Predict data from NLS model:\ncnti_data$weight_pred<-predict(NLSmod_cnti)\n\n# Plot\nggplot()+\n  geom_point(data=cnti_data, aes(x=SV_length, y=weight_pred, color=sex))+\n  labs(title='Length v. Weight Across Species',x='Length',y='Weight',color='Sex')\n\n\n\n\nPlot of both models:\n\n\n# Filter model output trained on total to just CNTI for comparison:\nliz_data_cnti<-filter(liz_data,spp=='CNTI',sex=='M')\n\n# Calculate RMSE's\ntot_mod_rmse <- rmse(liz_data_cnti$weight,liz_data_cnti$weight_pred)\ncnti_mod_rmse <- rmse(cnti_data$weight,cnti_data$weight_pred)\n\ncap=paste('RMSE for Total model over CNTI:',round(tot_mod_rmse,2),'\\nRMSE for CNTI model over CNTI:',round(cnti_mod_rmse,2),'\\nThe Male-CNTI specific model is better at predicting weights of Male CNTI lizards \\nand should be used for this specific case but may not generalize well to other species.')\n\n\n\n\n\n# Plot\nggplot()+\n  geom_point(data=cnti_data, aes(x=SV_length, y=weight_pred, col='CNTI'))+\n  geom_point(data=liz_data_cnti, aes(x=SV_length, y=weight_pred, col='Total'))+\n  labs(title='Length v. Weight Across Species',x='Length',y='Weight',color='Model',caption=cap)\n\n\n\n\n\n\n\n",
    "preview": "posts/2022-02-21-244lizards/a2_task2_fauss_kristina_files/figure-html5/unnamed-chunk-2-1.png",
    "last_modified": "2022-02-21T09:20:59-08:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-02-21-244palmetto/",
    "title": "ESM 244: Palmetto Model",
    "description": "Classwork for ESM 244 (UCSB) binary logistic regression.",
    "author": [
      {
        "name": "Kristina Fauss",
        "url": {}
      }
    ],
    "date": "2022-02-21",
    "categories": [],
    "contents": "\n\n\nknitr::opts_chunk$set(echo = TRUE,message=FALSE,warning = FALSE)\nlibrary(tidyverse)\nlibrary(GGally)\nlibrary(dplyr)\nlibrary(patchwork)\nlibrary(broom)\nlibrary(jtools)\nlibrary(caret)\nlibrary(AICcmodavg)\nlibrary(knitr)\n\n\n\nOverview\nData:\nTitle: Survival, growth and biomass estimates of two dominant palmetto species of south-central Florida from 1981 - 2017, ongoing at 5-year intervals.\nDescription: The time period captured is 1981 to 2017. The data includes the following contents as information about palmetto plant samples: [year, plant, species, site, habitat, treatment, survival, height, length, width, green_lvs, scape, new_lvs, biomass,canopy, lf_long, comments]. Height, length, and width refer to the dimensions of the plant’s canopy. Species is used to differentiate between different types of palmetto. Data is intended to compare growth of palmetto across habitats and under differing fire treatments.\nCitation: Abrahamson, W.G. 2019. Survival, growth and biomass estimates of two dominant palmetto species of south-central Florida from 1981 - 2017, ongoing at 5-year intervals ver 1. Environmental Data Initiative. https://doi.org/10.6073/pasta/f2f96ec76fbbd4b9db431c79a770c4d5 (Accessed 2022-02-01).\n\n\npalmetto_data <- read.csv('palmetto.csv')\n\n\n\nQuestions:\nApply Binary Logistic Regression to test whether palmetto species (Serenoa repens or Sabal etonia) may be classified using one or more of the following traits: number of green leaves, plant height, canopy length, or canopy width.\nData Exploration\n\n\n# Assign species names\npalmetto_data <- palmetto_data %>%\n  mutate(species_name=case_when(\n    species==1~'Serenoa repens',\n    species==2~'Sabal etonia'\n    ))%>%\n  mutate(species_short=case_when(\n    species==1~'S.R.',\n    species==2~'S.E'\n    ))\n\n# Convert species names to factor\npalmetto_data$species_name <- as.factor(palmetto_data$species_name)\n\n# Select only relevant columns for plotting & drop na\npalmetto <- palmetto_data %>%\n  select(species_name, species_short, site, height, length, width, green_lvs ) %>%\n  drop_na()\n\n\n\n\n\ncap <- 'The two species appear to have the most difference in Number of Green Leaves and Canopy Length. \\nWhen plotted against eachother, these two traits appear to differentiate the two species reasonably well.'\n\np1 <- ggplot(data=palmetto, aes(x=species_short, y=green_lvs))+\n  labs(x='Species',y='Green Leaves')+\n  theme(legend.position = \"none\")+\n  geom_boxplot(aes(color=species_short))\n\np2 <- ggplot(data=palmetto, aes(x=species_short, y=length))+\n  labs(x='Species',y='Canopy Length')+\n  theme(legend.position = \"none\")+\n  geom_boxplot(aes(color=species_short))\n\np3 <- ggplot(data=palmetto, aes(x=species_short, y=width))+\n  labs(x='Species',y='Canopy Width')+\n  theme(legend.position = \"none\")+\n  geom_boxplot(aes(color=species_short))\n\np4 <- ggplot(data=palmetto, aes(x=species_short, y=height))+\n  labs(x='Species',y='Canopy Height')+\n  theme(legend.position = \"none\")+\n  geom_boxplot(aes(color=species_short))\n\np5 <- ggplot(data=palmetto, aes(x=length, y=green_lvs))+\n  labs(title='Green Leaves v. Length Across Sites',x='Canopy Length',y='Green Leaves',color='Species',caption=cap)+\n  geom_point(aes(color=species_name))+\n  facet_wrap(~site)\n\npatchplot <- (p1|p2|p3|p4)/p5 + plot_annotation(title='Palmetto Trait Comparison')\npatchplot\n\n\n\n\nBinary Logistic Regression\n\n\n# Select only relevant columns for modeling & drop na\npalmetto_mod <- palmetto_data %>%\n  select(species_name, site, height, length, width, green_lvs ) %>%\n  drop_na()\n\n\n\nLog odds of plant type using plant height, canopy length, canopy width and green leaves as predictor variable.\n\n\n\n# Formula 1: f1 <- species_name ~ height+length+width+green_lvs\n\n# Generate Log Likelihood model 1: palmetto_blr1 <- glm(formula = f1, data=palmetto_mod, family=‘binomial’)\nsummary(palmetto_blr1) \n\n\n\nCall:\nglm(formula = f1, family = \"binomial\", data = palmetto_mod)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-4.7828  -0.2681  -0.0054   0.1725   3.3964  \n\nCoefficients:\n             Estimate Std. Error z value Pr(>|z|)    \n(Intercept) -3.226685   0.142071  -22.71   <2e-16 ***\nheight       0.029217   0.002306   12.67   <2e-16 ***\nlength      -0.045823   0.001866  -24.56   <2e-16 ***\nwidth       -0.039443   0.002100  -18.78   <2e-16 ***\ngreen_lvs    1.908475   0.038863   49.11   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 17005.5  on 12266  degrees of freedom\nResidual deviance:  5184.6  on 12262  degrees of freedom\nAIC: 5194.6\n\nNumber of Fisher Scoring iterations: 7\n\n\n\n# Plot model 1 probabilities by variable:\n\np11 <- effect_plot(palmetto_blr1,\n            pred=height,\n            interval=TRUE,\n            y.label='Probability of Serenoa repens')\np12 <- effect_plot(palmetto_blr1,\n            pred=length,\n            interval=TRUE,\n            y.label='Probability of Serenoa repens')\np13 <- effect_plot(palmetto_blr1,\n            pred=width,\n            interval=TRUE,\n            y.label='Probability of Serenoa repens')\np14 <- effect_plot(palmetto_blr1,\n            pred=green_lvs,\n            interval=TRUE,\n            y.label='Probability of Serenoa repens')\n\nmodel1_plot <- (p11|p12|p13|p14)\nmodel1_plot\n\n\n\n\nLog odds of plant type using plant height, canopy width and green leaves (i.e., drop canopy length for this model)\n\n\n\n# Formula 2: f2 <- species_name ~ height+width+green_lvs\n\n# Generate Log Likelihood model 2: palmetto_blr2 <- glm(formula = f2, data=palmetto_mod, family=‘binomial’)\nsummary(palmetto_blr2) \n\n\n\nCall:\nglm(formula = f2, family = \"binomial\", data = palmetto_mod)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-4.7113  -0.3404  -0.0112   0.2167   3.4455  \n\nCoefficients:\n             Estimate Std. Error z value Pr(>|z|)    \n(Intercept) -3.767722   0.135314 -27.844   <2e-16 ***\nheight       0.002950   0.001881   1.568    0.117    \nwidth       -0.069019   0.001785 -38.661   <2e-16 ***\ngreen_lvs    1.884815   0.036127  52.172   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 17005.5  on 12266  degrees of freedom\nResidual deviance:  5979.5  on 12263  degrees of freedom\nAIC: 5987.5\n\nNumber of Fisher Scoring iterations: 7\n\n\n\np21 <- effect_plot(palmetto_blr2,\n            pred=height,\n            interval=TRUE,\n            y.label='Probability of Serenoa repens')\np23 <- effect_plot(palmetto_blr2,\n            pred=width,\n            interval=TRUE,\n            y.label='Probability of Serenoa repens')\np24 <- effect_plot(palmetto_blr2,\n            pred=green_lvs,\n            interval=TRUE,\n            y.label='Probability of Serenoa repens')\n\nmodel1_plot <- (p21|p23|p24)\nmodel1_plot\n\n\n\n\nModel Evaluation\nModel 1 is the better model, delta AIC >> 2. 10 fold cross validation also reports a higher accuracy for model 1.\nAIC Values:\n\n\nAICcmodavg::aictab(list(palmetto_blr1,palmetto_blr2))\n\n\n\nModel selection based on AICc:\n\n     K    AICc Delta_AICc AICcWt Cum.Wt       LL\nMod1 5 5194.57       0.00      1      1 -2592.28\nMod2 4 5987.48     792.91      0      1 -2989.74\n\n10-Fold Cross Validation, use prediction accuracy to evaluate:\n\n\n# Use caret package to automate:\n\nset.seed(142)\ntr_ctrl <- trainControl(method='repeatedcv',number=10,repeats=10)\n\n# Train the models:\nmodel1 <- train(f1, data=palmetto_mod,\n                method='glm',\n                family='binomial',\n                trControl=tr_ctrl)\n\nmodel2 <- train(f2, data=palmetto_mod,\n                method='glm',\n                family='binomial',\n                trControl=tr_ctrl)\n\n\n\n\n\nmodel1\n\n\nGeneralized Linear Model \n\n12267 samples\n    4 predictor\n    2 classes: 'Sabal etonia', 'Serenoa repens' \n\nNo pre-processing\nResampling: Cross-Validated (10 fold, repeated 10 times) \nSummary of sample sizes: 11041, 11041, 11039, 11040, 11040, 11040, ... \nResampling results:\n\n  Accuracy   Kappa    \n  0.9168175  0.8336226\n\n\n\nmodel2\n\n\nGeneralized Linear Model \n\n12267 samples\n    3 predictor\n    2 classes: 'Sabal etonia', 'Serenoa repens' \n\nNo pre-processing\nResampling: Cross-Validated (10 fold, repeated 10 times) \nSummary of sample sizes: 11040, 11040, 11041, 11039, 11040, 11041, ... \nResampling results:\n\n  Accuracy   Kappa   \n  0.8988826  0.797747\n\nTrain Model 1 (final model) over whole data set:\n\n\npalm_model <- glm(formula = f1, \n                  data=palmetto_mod,\n                  family='binomial')\n\npalm_model_tidy <- broom::tidy(palm_model)\npalm_model_tidy\n\n\n# A tibble: 5 × 5\n  term        estimate std.error statistic   p.value\n  <chr>          <dbl>     <dbl>     <dbl>     <dbl>\n1 (Intercept)  -3.23     0.142       -22.7 3.42e-114\n2 height        0.0292   0.00231      12.7 8.69e- 37\n3 length       -0.0458   0.00187     -24.6 3.73e-133\n4 width        -0.0394   0.00210     -18.8 1.05e- 78\n5 green_lvs     1.91     0.0389       49.1 0        \n\nHow successfully final model evaluates a palm as the correct species:\n\n\n# Convert log odds into probability, see palm_model_fitted: '.fitted'\n\npalm_model_fitted <- palm_model %>%\n  broom::augment(type.predict='response')\n\n\np31 <- ggplot(data=palm_model_fitted, aes(x=height, y=.fitted))+\n  geom_point(aes(color=species_name))+\n  theme(legend.position = \"none\")+\n  labs(x='Height', y='Probability of Serenoa repens')\np32 <- ggplot(data=palm_model_fitted, aes(x=length, y=.fitted))+\n  geom_point(aes(color=species_name))+\n  theme(legend.position = \"none\")+\n  labs(x='Length', y='Probability of Serenoa repens')\np33 <- ggplot(data=palm_model_fitted, aes(x=width, y=.fitted))+\n  geom_point(aes(color=species_name))+\n  theme(legend.position = \"none\")+\n  labs(x='Width', y='Probability of Serenoa repens')\np34 <- ggplot(data=palm_model_fitted, aes(x=green_lvs, y=.fitted))+\n  geom_point(aes(color=species_name))+\n  labs(x='Green Leaves', y='Probability of Serenoa repens')\n\npalm_model_plot <- (p31|p32)/(p33|p34)\npalm_model_plot\n\n\n\n\n\n\npalm_model_fitted\n\n\n# A tibble: 12,267 × 11\n   species_name   height length width green_lvs .fitted  .resid\n   <fct>           <int>  <int> <int>     <dbl>   <dbl>   <dbl>\n 1 Serenoa repens     51     69    63         6 0.983    0.184 \n 2 Sabal etonia       79    129    71         3 0.0197  -0.200 \n 3 Serenoa repens     80     90    66         6 0.979    0.207 \n 4 Sabal etonia       59     80    72         2 0.0149  -0.173 \n 5 Serenoa repens     83     96    79         6 0.958    0.292 \n 6 Sabal etonia       93    119    90         2 0.00335 -0.0819\n 7 Serenoa repens     50     49    40         6 0.997    0.0754\n 8 Sabal etonia       79     94    68         2 0.0164  -0.182 \n 9 Serenoa repens     66     70    70         5 0.907    0.442 \n10 Sabal etonia       57     92    70         3 0.0566  -0.342 \n# … with 12,257 more rows, and 4 more variables: .std.resid <dbl>,\n#   .hat <dbl>, .sigma <dbl>, .cooksd <dbl>\n\n\n\n# Add a column that classifies species by 50% probability:\npalm_model_fitted_class <- palm_model_fitted %>%\n  mutate(classify=case_when(\n    .fitted>=0.5~'Serenoa repens',\n    .fitted<0.5~'Sabal etonia'))\n\n# Add a column that evaluating accuracy:\npalm_model_fitted_ac <- palm_model_fitted_class %>%\n  mutate(accuracy=case_when(\n    species_name=='Serenoa repens' & classify=='Serenoa repens'~1,\n    species_name=='Serenoa repens' & classify=='Sabal etonia'~-1,\n    species_name=='Sabal etonia' & classify=='Serenoa repens'~-2,\n    species_name=='Sabal etonia' & classify=='Sabal etonia'~2))\n\n# Count correctly and incorrectly identified palmettos, calculate % correct:\nsr_y <- length(which(palm_model_fitted_ac$accuracy==1))\nsr_n <- length(which(palm_model_fitted_ac$accuracy==-1))\nse_y <- length(which(palm_model_fitted_ac$accuracy==2))\nse_n <- length(which(palm_model_fitted_ac$accuracy==-2))\nsr_perc <- round(sr_y/(sr_y+sr_n),2)\nse_perc <- round(se_y/(se_y+se_n),2)\n\nspec <-c('Serenoa repens','Sabal etonia')\ncorrect <- c(sr_y,se_y)\nincorrect <- c(sr_n,se_n)\npercent_correct <- c(sr_perc,se_perc)\n\nfinal_df <- data.frame(spec,correct,incorrect,percent_correct)\n\n\n\n\n\n# Final Table:\ncols<-c('Species','Correct','Incorrect','% Correct')\nkable(final_df, col.names=cols, caption='Model 1 Performance Summary')\n\n\nTable 1: Model 1 Performance Summary\nSpecies\nCorrect\nIncorrect\n% Correct\nSerenoa repens\n5548\n564\n0.91\nSabal etonia\n5701\n454\n0.93\n\nModel 1 correctly identifies both species at a frequency > 90%. It is slightly better at identifying Sabal etonia than Serenoa repens.\n\n\n\n",
    "preview": "posts/2022-02-21-244palmetto/a2_task1_fauss_kristina_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2022-02-21T09:28:09-08:00",
    "input_file": "a2_task1_fauss_kristina.knit.md"
  },
  {
    "path": "posts/2022-01-16-welcome/",
    "title": "Welcome!",
    "description": "Posts will be added with recent work.",
    "author": [
      {
        "name": "Kristina Fauss",
        "url": {}
      }
    ],
    "date": "2022-01-16",
    "categories": [],
    "contents": "\nThis blog will be updated with details on my current research.\n\n\n\n",
    "preview": {},
    "last_modified": "2022-02-21T09:25:23-08:00",
    "input_file": {}
  }
]
